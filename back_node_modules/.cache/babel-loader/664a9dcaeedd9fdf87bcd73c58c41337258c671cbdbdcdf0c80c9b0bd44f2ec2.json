{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kenneth\\\\Documents\\\\GitHub\\\\JSDex.github.io\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_PKMN = 1025;\nconst Item = styled(Paper)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary\n}));\n_c = Item;\nasync function getData(ID) {\n  try {\n    var response = await fetch(\"data/api/\" + ID + \"/api.json\").then(response => response.json());\n    var spec_response = await fetch(\"data/api/\" + ID + \"/species.json\").then(response => response.json());\n    var spriteURL = \"data/sprites/\" + ID + \"/front_default.png\";\n    var data = response;\n    var spec_data = spec_response;\n    return [data, spec_data, spriteURL];\n  } catch (e) {\n    console.log(e);\n  }\n}\nfunction titleCase( /**@type String */str) {\n  /**@type String */\n  var base = str.toLowerCase();\n  return base.charAt(0).toUpperCase() + base.slice(1);\n}\nfunction pokeIcon(ID) {\n  var pokedata = data[ID];\n  console.log(pokedata);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 2,\n    sm: 4,\n    md: 4,\n    id: ID,\n    children: /*#__PURE__*/_jsxDEV(Item, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + pokedata[2],\n        style: {\n          alignContent: \"center\"\n        },\n        alt: \"pokemon data\"\n      }, ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), titleCase(pokedata[0].name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, ID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\nclass LiveGrid extends React.Component {\n  constructor() {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {\n      text: \"\"\n    };\n  }\n  handleClick() {\n    var i = 0;\n    var txt = 'Lorem ipsum dummy text blabla.';\n    var speed = 50;\n    let typeWriter = () => {\n      if (i < txt.length) {\n        this.setState({\n          text: txt.substring(0, i++)\n        });\n        setTimeout(typeWriter, speed);\n      }\n    };\n    typeWriter();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Typewriter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"demo\",\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  }\n}\nfunction App() {\n  /*   console.log(data);\r\n    var grid_rows = []\r\n    for(var i = 1; i <= MAX_PKMN; i++)\r\n    {\r\n      grid_rows.push(pokeIcon(i));\r\n    } */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"JSDex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar data = [];\nfor (var i = 1; i <= MAX_PKMN; i++) {\n  var mon_data = await getData(i);\n  App();\n  data.push(mon_data);\n}\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["logo","React","styled","Box","Paper","Grid","jsxDEV","_jsxDEV","MAX_PKMN","Item","theme","backgroundColor","palette","mode","typography","body2","padding","spacing","textAlign","color","text","secondary","_c","getData","ID","response","fetch","then","json","spec_response","spriteURL","data","spec_data","e","console","log","titleCase","str","base","toLowerCase","charAt","toUpperCase","slice","pokeIcon","pokedata","item","xs","sm","md","id","children","src","process","env","PUBLIC_URL","style","alignContent","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","LiveGrid","Component","constructor","props","handleClick","bind","state","i","txt","speed","typeWriter","length","setState","substring","setTimeout","render","onClick","App","className","_c2","mon_data","push","$RefreshReg$"],"sources":["C:/Users/Kenneth/Documents/GitHub/JSDex.github.io/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Paper from '@mui/material/Paper';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nconst MAX_PKMN = 1025\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nasync function getData(ID)\r\n{\r\n  try\r\n  {\r\n    var response = await fetch(\"data/api/\"+ID+\"/api.json\").then((response) => response.json());\r\n    var spec_response = await fetch(\"data/api/\"+ID+\"/species.json\").then((response) => response.json())\r\n    var spriteURL = \"data/sprites/\"+ID+\"/front_default.png\"\r\n    var data = response;\r\n    var spec_data = spec_response;\r\n    return [data, spec_data, spriteURL];\r\n  }\r\n  catch(e)\r\n  {\r\n    console.log(e);\r\n  }\r\n  \r\n}\r\n\r\nfunction titleCase(/**@type String */str)\r\n{\r\n    /**@type String */\r\n    var base = str.toLowerCase()\r\n    return base.charAt(0).toUpperCase() + base.slice(1);\r\n}\r\n\r\n\r\n\r\nfunction pokeIcon(ID)\r\n{\r\n  var pokedata = data[ID]\r\n  console.log(pokedata)\r\n  return (\r\n  <Grid item xs={2} sm={4} md={4} key={ID} id={ID}>\r\n    <Item><img src={process.env.PUBLIC_URL + pokedata[2]} style={{alignContent: \"center\"}} alt=\"pokemon data\" key={ID}></img>{titleCase(pokedata[0].name)}</Item>\r\n  </Grid>\r\n  );\r\n}\r\n\r\nclass LiveGrid extends React.Component {\r\n  constructor() {\r\n      super(props)\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.state = { text: \"\"};\r\n  }\r\n\r\n  handleClick() {\r\n      var i = 0;\r\n      var txt = 'Lorem ipsum dummy text blabla.';\r\n      var speed = 50;\r\n      let typeWriter = () => {\r\n          if (i < txt.length) {\r\n              this.setState({ text: txt.substring(0, i++) });\r\n              setTimeout(typeWriter, speed);\r\n          }\r\n      };\r\n      typeWriter();\r\n  }\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <h1>Typewriter</h1>\r\n        <button onClick={this.handleClick}>Click me</button>\r\n        <p id=\"demo\">{this.state.text}</p>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\n\r\nfunction App() {\r\n/*   console.log(data);\r\n  var grid_rows = []\r\n  for(var i = 1; i <= MAX_PKMN; i++)\r\n  {\r\n    grid_rows.push(pokeIcon(i));\r\n  } */\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <h1 style={{textAlign: \"center\"}}>JSDex</h1>\r\n      <body>\r\n       \r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nvar data = []\r\nfor(var i = 1; i <= MAX_PKMN; i++)\r\n{\r\n  var mon_data = await getData(i);\r\n  App();\r\n  data.push(mon_data);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAG,IAAI;AAErB,MAAMC,IAAI,GAAGP,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC;EAAEM;AAAM,CAAC,MAAM;EACzCC,eAAe,EAAED,KAAK,CAACE,OAAO,CAACC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,MAAM;EACnE,GAAGH,KAAK,CAACI,UAAU,CAACC,KAAK;EACzBC,OAAO,EAAEN,KAAK,CAACO,OAAO,CAAC,CAAC,CAAC;EACzBC,SAAS,EAAE,QAAQ;EACnBC,KAAK,EAAET,KAAK,CAACE,OAAO,CAACQ,IAAI,CAACC;AAC5B,CAAC,CAAC,CAAC;AAACC,EAAA,GANEb,IAAI;AAQV,eAAec,OAAOA,CAACC,EAAE,EACzB;EACE,IACA;IACE,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,GAACF,EAAE,GAAC,WAAW,CAAC,CAACG,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC1F,IAAIC,aAAa,GAAG,MAAMH,KAAK,CAAC,WAAW,GAACF,EAAE,GAAC,eAAe,CAAC,CAACG,IAAI,CAAEF,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACnG,IAAIE,SAAS,GAAG,eAAe,GAACN,EAAE,GAAC,oBAAoB;IACvD,IAAIO,IAAI,GAAGN,QAAQ;IACnB,IAAIO,SAAS,GAAGH,aAAa;IAC7B,OAAO,CAACE,IAAI,EAAEC,SAAS,EAAEF,SAAS,CAAC;EACrC,CAAC,CACD,OAAMG,CAAC,EACP;IACEC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAChB;AAEF;AAEA,SAASG,SAASA,CAAA,CAAC,kBAAkBC,GAAG,EACxC;EACI;EACA,IAAIC,IAAI,GAAGD,GAAG,CAACE,WAAW,CAAC,CAAC;EAC5B,OAAOD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;AACvD;AAIA,SAASC,QAAQA,CAACnB,EAAE,EACpB;EACE,IAAIoB,QAAQ,GAAGb,IAAI,CAACP,EAAE,CAAC;EACvBU,OAAO,CAACC,GAAG,CAACS,QAAQ,CAAC;EACrB,oBACArC,OAAA,CAACF,IAAI;IAACwC,IAAI;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAAUC,EAAE,EAAEzB,EAAG;IAAA0B,QAAA,eAC9C3C,OAAA,CAACE,IAAI;MAAAyC,QAAA,gBAAC3C,OAAA;QAAK4C,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGV,QAAQ,CAAC,CAAC,CAAE;QAACW,KAAK,EAAE;UAACC,YAAY,EAAE;QAAQ,CAAE;QAACC,GAAG,EAAC;MAAc,GAAMjC,EAAE;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAACzB,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAACkB,IAAI,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC,GAD1HrC,EAAE;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAET;AAEA,MAAME,QAAQ,SAAS9D,KAAK,CAAC+D,SAAS,CAAC;EACrCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAACC,KAAK,CAAC;IACZ,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9C,IAAI,CAACC,KAAK,GAAG;MAAEjD,IAAI,EAAE;IAAE,CAAC;EAC5B;EAEA+C,WAAWA,CAAA,EAAG;IACV,IAAIG,CAAC,GAAG,CAAC;IACT,IAAIC,GAAG,GAAG,gCAAgC;IAC1C,IAAIC,KAAK,GAAG,EAAE;IACd,IAAIC,UAAU,GAAGA,CAAA,KAAM;MACnB,IAAIH,CAAC,GAAGC,GAAG,CAACG,MAAM,EAAE;QAChB,IAAI,CAACC,QAAQ,CAAC;UAAEvD,IAAI,EAAEmD,GAAG,CAACK,SAAS,CAAC,CAAC,EAAEN,CAAC,EAAE;QAAE,CAAC,CAAC;QAC9CO,UAAU,CAACJ,UAAU,EAAED,KAAK,CAAC;MACjC;IACJ,CAAC;IACDC,UAAU,CAAC,CAAC;EAChB;EAEFK,MAAMA,CAAA,EAAG;IACP,oBACEvE,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,EAAI;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBtD,OAAA;QAAQwE,OAAO,EAAE,IAAI,CAACZ,WAAY;QAAAjB,QAAA,EAAC;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpDtD,OAAA;QAAG0C,EAAE,EAAC,MAAM;QAAAC,QAAA,EAAE,IAAI,CAACmB,KAAK,CAACjD;MAAI;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;AACA;AAGA,SAASmB,GAAGA,CAAA,EAAG;EACf;AACA;AACA;AACA;AACA;AACA;EACE,oBACEzE,OAAA;IAAK0E,SAAS,EAAC,KAAK;IAAA/B,QAAA,gBAElB3C,OAAA;MAAIgD,KAAK,EAAE;QAACrC,SAAS,EAAE;MAAQ,CAAE;MAAAgC,QAAA,EAAC;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CtD,OAAA;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACqB,GAAA,GAhBQF,GAAG;AAkBZ,IAAIjD,IAAI,GAAG,EAAE;AACb,KAAI,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI9D,QAAQ,EAAE8D,CAAC,EAAE,EACjC;EACE,IAAIa,QAAQ,GAAG,MAAM5D,OAAO,CAAC+C,CAAC,CAAC;EAC/BU,GAAG,CAAC,CAAC;EACLjD,IAAI,CAACqD,IAAI,CAACD,QAAQ,CAAC;AACrB;AAEA,eAAeH,GAAG;AAAC,IAAA1D,EAAA,EAAA4D,GAAA;AAAAG,YAAA,CAAA/D,EAAA;AAAA+D,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}