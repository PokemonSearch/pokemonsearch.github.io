{"ast":null,"code":"var globalSortMode = \"AND\";\nfunction count( /**@type String */str, /**@type String */seg) {\n  return (str.match(new RegExp(str)) || []).length;\n}\nfunction setMode(value) {\n  if (value == \"OR\") {\n    globalSortMode = \"OR\";\n  }\n  if (value == \"AND\") {\n    globalSortMode = \"AND\";\n  }\n}\nfunction getGen(ID) {\n  if (ID < 152) {\n    return 1;\n  } else if (ID < 252) {\n    return 2;\n  } else if (ID < 387) {\n    return 3;\n  } else if (ID < 494) {\n    return 4;\n  } else if (ID < 650) {\n    return 5;\n  } else if (ID < 722) {\n    return 6;\n  } else if (ID < 810) {\n    return 7;\n  } else if (ID < 906) {\n    return 8;\n  } else {\n    return 9;\n  }\n}\nfunction checkWeight(icon, comp, value) {\n  switch (comp) {\n    case \"=\":\n      return icon.data.weight == value;\n    case \">\":\n      return icon.data.weight > value;\n    case \"<\":\n      return icon.data.weight < value;\n  }\n}\nfunction checkGeneration(icon, comp, str_value) {\n  var value = Number(str_value);\n  var gen = getGen(icon.ID);\n  switch (comp) {\n    case \"=\":\n      return gen == value;\n    case \">\":\n      return gen > value;\n    case \"<\":\n      return gen < value;\n  }\n}\nfunction checkID(icon, comp, str_value) {\n  var value = Number(str_value);\n  var icID = icon.ID;\n  switch (comp) {\n    case \"=\":\n      return icID == value;\n    case \">\":\n      return icID > value;\n    case \"<\":\n      return icID < value;\n  }\n}\nfunction checkForms(icon, comp, str_value) {\n  var value = Number(str_value) - 1;\n  switch (comp) {\n    case \"=\":\n      return icon.forms.length == value;\n    case \">\":\n      return icon.forms.length > value;\n    case \"<\":\n      return icon.forms.length < value;\n  }\n}\nfunction checkLearnset(icon, comp, str_value) {\n  if (comp == \"=\") {\n    console.log(icon.data.moves);\n    return icon.data.moves.some(x => x.move.name == str_value.toLowerCase() || x.move.name.replace(\"-\", \" \") == str_value.toLowerCase());\n  }\n  return false;\n}\nfunction checkType(icon, comp, value) {\n  if (comp == \"=\") {\n    if (icon.data.types.length == 1) {\n      return icon.data.types[0].type.name == value;\n    } else {\n      return icon.data.types[0].type.name == value || icon.data.types[1].type.name == value;\n    }\n  }\n  return false;\n}\nfunction checkName(icon, comp, value) {\n  if (comp == \"=\") {\n    return icon.data.name == value;\n  } else {\n    return icon.data.name.includes(value);\n  }\n}\nfunction checkCol(icon, comp, value) {\n  if (comp == \"=\") {\n    return icon.spec_data.color.name == value;\n  } else {\n    return false;\n  }\n}\nfunction getBST(stats) {\n  var total = 0;\n  for (var i = 0; i < 6; i++) {\n    total += stats[i].base_stat;\n  }\n  return total;\n}\nfunction checkStat(icon, comp, str_value, statID) {\n  var value = Number(str_value);\n  if (statID == 6)\n    //BST\n    {\n      var bst = getBST(icon.data.stats);\n      switch (comp) {\n        case \"=\":\n          return bst == value;\n        case \">\":\n          return bst > value;\n        case \"<\":\n          return bst < value;\n      }\n      return false;\n    }\n  switch (comp) {\n    case \"=\":\n      return icon.data.stats[statID].base_stat == value;\n    case \">\":\n      return icon.data.stats[statID].base_stat > value;\n    case \"<\":\n      return icon.data.stats[statID].base_stat < value;\n  }\n  return false;\n}\nfunction checkHP(icon, comp, value) {\n  return checkStat(icon, comp, value, 0);\n}\nfunction checkAtk(icon, comp, value) {\n  return checkStat(icon, comp, value, 1);\n}\nfunction checkDef(icon, comp, value) {\n  return checkStat(icon, comp, value, 2);\n}\nfunction checkSpA(icon, comp, value) {\n  return checkStat(icon, comp, value, 3);\n}\nfunction checkSpD(icon, comp, value) {\n  return checkStat(icon, comp, value, 4);\n}\nfunction checkSpe(icon, comp, value) {\n  return checkStat(icon, comp, value, 5);\n}\nfunction checkBST(icon, comp, value) {\n  return checkStat(icon, comp, value, 6);\n}\nfunction checkCR(icon, comp, value) {\n  switch (comp) {\n    case \"=\":\n      return icon.spec_data.capture_rate == value;\n    case \">\":\n      return icon.spec_data.capture_rate > value;\n    case \"<\":\n      return icon.spec_data.capture_rate < value;\n  }\n}\nvar operators = {\n  \"name\": checkName,\n  \"type\": checkType,\n  \"color\": checkCol,\n  \"colour\": checkCol,\n  \"weight\": checkWeight,\n  \"hp\": checkHP,\n  \"atk\": checkAtk,\n  \"def\": checkDef,\n  \"spa\": checkSpA,\n  \"spd\": checkSpD,\n  \"spe\": checkSpe,\n  \"speed\": checkSpe,\n  \"bst\": checkBST,\n  \"basestattotal\": checkBST,\n  \"base_stat_total\": checkBST,\n  \"capture\": checkCR,\n  \"capturerate\": checkCR,\n  \"capture_rate\": checkCR,\n  \"forms\": checkForms,\n  \"gen\": checkGeneration,\n  \"id\": checkID,\n  \"natdex\": checkID,\n  \"learns\": checkLearnset\n};\nvar desc = {\n  \"checkName\": \"The name of the Pokemon's default form (i.e: Pikachu, Zoroark, Dunsparce)\",\n  \"checkType\": \"The elemental type(s) of the Pokemon (i.e: Fire, Water, Grass)\",\n  \"checkCol\": \"The internally specified colour of the Pokemon (i.e: Green, Purple, White)\",\n  \"checkWeight\": \"The internally specified weight of the Pokemon (i.e: 300, 5, 999)\",\n  \"checkHP\": \"The base stat for the Pokemon's HP stat\",\n  \"checkAtk\": \"The base stat for the Pokemon's ATTACK stat\",\n  \"checkDef\": \"The base stat for the Pokemon's DEFENSE stat\",\n  \"checkSpA\": \"The base stat for the Pokemon's SPECIAL ATTACK stat\",\n  \"checkSpD\": \"The base stat for the Pokemon's SPECIAL DEFENSE stat\",\n  \"checkSpe\": \"The base stat for the Pokemon's SPEED stat\",\n  \"checkBST\": \"The base stat total of a Pokemon (The sum of all of its base stats for HP, Atk, SpA, Def, SpD, Spe)\",\n  \"checkCR\": \"The internally specified capture rate of a Pokemon (i.e: 3, 255, 37)\",\n  \"checkForms\": \"The number of forms a Pokemon has (Including its default form)\",\n  \"checkGeneration\": \"The generation of mainline Pokemon games that the Pokemon was introduced in (i.e: 1, 5, 8)\",\n  \"checkID\": \"The national dex number of the Pokemon (i.e: 1, 76, 904)\",\n  \"checkLearnset\": \"The learnset of a pokemon. Checks if equated move is in the learnset (i.e learns=rock-throw)\"\n};\nfunction evaluateArgument( /**@type String */arg, /**@type [PokeIcon] */dataList, formDict) {\n  arg = arg.toLowerCase();\n  console.log(dataList);\n  var keys = Object.keys(operators).sort(function (a, b) {\n    return b.length - a.length;\n  });\n  var hasOperator = false;\n  var operator = \"\";\n  var comparator = \"\";\n  var value = \"\";\n  var possibleComps = [\"=\", \">\", \"<\"];\n  console.log(keys);\n  for (var i = 0; i < keys.length; i++) {\n    var k = keys[i];\n    if (arg.includes(k)) {\n      if (operator != \"\" && operators[k] == operators[operator]) {\n        continue;\n      } //skip if it is an equivalent operator\n      console.log(k + \" vs. \" + operator);\n      if (hasOperator) {\n        return [];\n      } //check if there are multiple operators\n      if (!hasOperator) {\n        hasOperator = true;\n      }\n      ;\n      if (arg[arg.indexOf(k)] == arg.length - 1) {\n        return [];\n      } //check if operator is at end\n      if (arg[arg.indexOf(k)] == arg.length - 2) {\n        return [];\n      } //check if comparator is at end\n      if (!possibleComps.includes(arg.charAt(arg.indexOf(k) + k.length))) {\n        return [];\n      } //check if there is valid comparator\n      operator = k;\n      comparator = arg.charAt(arg.indexOf(k) + k.length);\n      var value = arg.substring(arg.indexOf(k) + k.length + 1);\n    }\n  }\n  if (!hasOperator) {\n    operator = \"name\";\n    comparator = \"\";\n    value = arg;\n  }\n  var finalList = [];\n  for (var i = 0; i < dataList.length; i++) {\n    if (operators[operator]({\n      data: dataList[i][0],\n      spec_data: dataList[i][1],\n      forms: formDict[dataList[i][3]]\n    }, comparator, value)) {\n      finalList.push(dataList[i]);\n    }\n  }\n  return finalList;\n}\nmodule.exports = {\n  evaluateArgument\n};","map":{"version":3,"names":["globalSortMode","count","str","seg","match","RegExp","length","setMode","value","getGen","ID","checkWeight","icon","comp","data","weight","checkGeneration","str_value","Number","gen","checkID","icID","checkForms","forms","checkLearnset","console","log","moves","some","x","move","name","toLowerCase","replace","checkType","types","type","checkName","includes","checkCol","spec_data","color","getBST","stats","total","i","base_stat","checkStat","statID","bst","checkHP","checkAtk","checkDef","checkSpA","checkSpD","checkSpe","checkBST","checkCR","capture_rate","operators","desc","evaluateArgument","arg","dataList","formDict","keys","Object","sort","a","b","hasOperator","operator","comparator","possibleComps","k","indexOf","charAt","substring","finalList","push","module","exports"],"sources":["C:/Users/Kenneth/Documents/GitHub/JSDex.github.io/src/data_analysis.js"],"sourcesContent":["var globalSortMode = \"AND\";\r\n\r\nfunction count(/**@type String */str, /**@type String */seg)\r\n{\r\n    return (str.match(new RegExp(str)) || []).length;\r\n}\r\n\r\nfunction setMode(value)\r\n{\r\n    if(value == \"OR\"){globalSortMode = \"OR\";}\r\n    if(value == \"AND\"){globalSortMode = \"AND\";}\r\n}\r\n\r\nfunction getGen(ID)\r\n{\r\n    if(ID < 152)\r\n    {\r\n        return 1;\r\n    }\r\n    else if (ID < 252)\r\n    {\r\n        return 2;\r\n    }\r\n    else if(ID < 387)\r\n    {\r\n        return 3;\r\n    }\r\n    else if(ID < 494)\r\n    {\r\n        return 4;\r\n    }\r\n    else if(ID < 650)\r\n    {\r\n        return 5;\r\n    }\r\n    else if(ID < 722)\r\n    {\r\n        return 6;\r\n    }\r\n    else if(ID < 810)\r\n    {\r\n        return 7;\r\n    }\r\n    else if(ID < 906)\r\n    {\r\n        return 8;\r\n    }\r\n    else\r\n    {\r\n        return 9;\r\n    }\r\n}\r\n\r\nfunction checkWeight(icon, comp, value)\r\n{\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return icon.data.weight == value;\r\n        case \">\":\r\n            return icon.data.weight > value;\r\n        case \"<\":\r\n            return icon.data.weight < value;\r\n    }\r\n}\r\n\r\nfunction checkGeneration(icon, comp, str_value)\r\n{\r\n    var value = Number(str_value)\r\n    var gen = getGen(icon.ID);\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return gen == value;\r\n        case \">\":\r\n            return gen > value;\r\n        case \"<\":\r\n            return gen < value;\r\n    }\r\n}\r\n\r\nfunction checkID(icon, comp, str_value)\r\n{\r\n    var value = Number(str_value)\r\n    var icID = icon.ID;\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return icID == value;\r\n        case \">\":\r\n            return icID > value;\r\n        case \"<\":\r\n            return icID < value;\r\n    }\r\n}\r\n\r\nfunction checkForms(icon, comp, str_value)\r\n{\r\n    var value = Number(str_value) - 1\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return icon.forms.length == value;\r\n        case \">\":\r\n            return icon.forms.length > value;\r\n        case \"<\":\r\n            return icon.forms.length < value;\r\n    }\r\n}\r\n\r\nfunction checkLearnset(icon, comp, str_value)\r\n{\r\n    if(comp == \"=\")\r\n    {\r\n        console.log(icon.data.moves)\r\n        return icon.data.moves.some(x => (x.move.name == str_value.toLowerCase() || x.move.name.replace(\"-\",\" \") == str_value.toLowerCase()));\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nfunction checkType(icon, comp, value)\r\n{\r\n    if(comp == \"=\")\r\n    {\r\n        if(icon.data.types.length == 1)\r\n        {\r\n            return icon.data.types[0].type.name == value\r\n        }\r\n        else\r\n        {\r\n            return icon.data.types[0].type.name == value || icon.data.types[1].type.name == value;\r\n        }\r\n        \r\n    }\r\n    return false;\r\n}\r\n\r\nfunction checkName(icon, comp, value)\r\n{\r\n    if(comp == \"=\")\r\n    {\r\n        return icon.data.name == value;\r\n    }\r\n    else\r\n    {\r\n        return icon.data.name.includes(value);\r\n    }\r\n}\r\n\r\nfunction checkCol(icon, comp, value)\r\n{\r\n    if(comp == \"=\")\r\n    {\r\n        return icon.spec_data.color.name == value;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction getBST(stats)\r\n{\r\n    var total = 0;\r\n    for(var i = 0; i < 6; i++)\r\n    {\r\n        total += stats[i].base_stat\r\n    }\r\n    return total;\r\n}\r\n\r\nfunction checkStat(icon, comp, str_value, statID)\r\n{\r\n    var value = Number(str_value)\r\n    if(statID == 6) //BST\r\n    {\r\n        var bst = getBST(icon.data.stats);\r\n        switch(comp)\r\n        {\r\n            case \"=\":\r\n                return bst == value;\r\n            case \">\":\r\n                return bst > value;\r\n            case \"<\":\r\n                return bst < value;\r\n        }\r\n        return false;\r\n    }\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return icon.data.stats[statID].base_stat == value;\r\n        case \">\":\r\n            return icon.data.stats[statID].base_stat > value;\r\n        case \"<\":\r\n            return icon.data.stats[statID].base_stat < value;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction checkHP(icon, comp, value){return checkStat(icon, comp, value, 0);}\r\nfunction checkAtk(icon, comp, value){return checkStat(icon, comp, value, 1);}\r\nfunction checkDef(icon, comp, value){return checkStat(icon, comp, value, 2);}\r\nfunction checkSpA(icon, comp, value){return checkStat(icon, comp, value, 3);}\r\nfunction checkSpD(icon, comp, value){return checkStat(icon, comp, value, 4);}\r\nfunction checkSpe(icon, comp, value){return checkStat(icon, comp, value, 5);}\r\nfunction checkBST(icon, comp, value){return checkStat(icon, comp, value, 6);}\r\n\r\nfunction checkCR(icon, comp, value)\r\n{\r\n    switch(comp)\r\n    {\r\n        case \"=\":\r\n            return icon.spec_data.capture_rate == value;\r\n        case \">\":\r\n            return icon.spec_data.capture_rate > value;\r\n        case \"<\":\r\n            return icon.spec_data.capture_rate < value;\r\n    }\r\n}\r\n\r\nvar operators = \r\n{\r\n    \"name\":checkName,\r\n\r\n    \"type\":checkType,\r\n\r\n    \"color\":checkCol,\r\n    \"colour\":checkCol,\r\n\r\n    \"weight\":checkWeight,\r\n\r\n    \"hp\":checkHP,\r\n\r\n    \"atk\":checkAtk,\r\n\r\n    \"def\":checkDef,\r\n\r\n    \"spa\":checkSpA,\r\n\r\n    \"spd\":checkSpD,\r\n\r\n    \"spe\":checkSpe,\r\n    \"speed\":checkSpe,\r\n\r\n    \"bst\":checkBST,\r\n    \"basestattotal\":checkBST,\r\n    \"base_stat_total\":checkBST,\r\n\r\n    \"capture\":checkCR,\r\n    \"capturerate\":checkCR,\r\n    \"capture_rate\":checkCR,\r\n\r\n    \"forms\":checkForms,\r\n\r\n    \"gen\":checkGeneration,\r\n\r\n    \"id\":checkID,\r\n    \"natdex\":checkID,\r\n\r\n    \"learns\":checkLearnset\r\n}\r\n\r\nvar desc =\r\n{\r\n    \"checkName\":\"The name of the Pokemon's default form (i.e: Pikachu, Zoroark, Dunsparce)\",\r\n    \"checkType\":\"The elemental type(s) of the Pokemon (i.e: Fire, Water, Grass)\",\r\n    \"checkCol\":\"The internally specified colour of the Pokemon (i.e: Green, Purple, White)\",\r\n    \"checkWeight\":\"The internally specified weight of the Pokemon (i.e: 300, 5, 999)\",\r\n    \"checkHP\":\"The base stat for the Pokemon's HP stat\",\r\n    \"checkAtk\":\"The base stat for the Pokemon's ATTACK stat\",\r\n    \"checkDef\":\"The base stat for the Pokemon's DEFENSE stat\",\r\n    \"checkSpA\":\"The base stat for the Pokemon's SPECIAL ATTACK stat\",\r\n    \"checkSpD\":\"The base stat for the Pokemon's SPECIAL DEFENSE stat\",\r\n    \"checkSpe\":\"The base stat for the Pokemon's SPEED stat\",\r\n    \"checkBST\":\"The base stat total of a Pokemon (The sum of all of its base stats for HP, Atk, SpA, Def, SpD, Spe)\",\r\n    \"checkCR\":\"The internally specified capture rate of a Pokemon (i.e: 3, 255, 37)\",\r\n    \"checkForms\":\"The number of forms a Pokemon has (Including its default form)\",\r\n    \"checkGeneration\":\"The generation of mainline Pokemon games that the Pokemon was introduced in (i.e: 1, 5, 8)\",\r\n    \"checkID\":\"The national dex number of the Pokemon (i.e: 1, 76, 904)\",\r\n    \"checkLearnset\":\"The learnset of a pokemon. Checks if equated move is in the learnset (i.e learns=rock-throw)\"\r\n}\r\n\r\nfunction evaluateArgument(/**@type String */arg, /**@type [PokeIcon] */dataList, formDict)\r\n{\r\n    arg = arg.toLowerCase();\r\n    console.log(dataList)\r\n    var keys = Object.keys(operators).sort(function(a, b){return b.length - a.length;});\r\n    var hasOperator = false;\r\n    var operator = \"\";\r\n    var comparator = \"\"\r\n    var value = \"\";\r\n    var possibleComps = [\"=\",\">\",\"<\"]\r\n    console.log(keys);\r\n    for(var i = 0; i < keys.length; i++)\r\n    {\r\n        var k = keys[i];\r\n        if(arg.includes(k))\r\n        {\r\n            if(operator != \"\" && operators[k] == operators[operator]){continue;} //skip if it is an equivalent operator\r\n            console.log(k + \" vs. \" + operator);\r\n            if(hasOperator){return [];} //check if there are multiple operators\r\n            if(!hasOperator){hasOperator = true};  \r\n            if(arg[arg.indexOf(k)] == arg.length - 1){return [];} //check if operator is at end\r\n            if(arg[arg.indexOf(k)] == arg.length - 2){return [];} //check if comparator is at end\r\n            if(!possibleComps.includes(arg.charAt(arg.indexOf(k) + k.length))){return [];} //check if there is valid comparator\r\n            operator = k;\r\n            comparator = arg.charAt((arg.indexOf(k) + k.length));\r\n            var value = arg.substring((arg.indexOf(k) + k.length) + 1);\r\n        }\r\n    }\r\n    \r\n    if(!hasOperator){operator = \"name\"; comparator = \"\"; value = arg;}\r\n    var finalList = []\r\n    for(var i = 0; i < dataList.length; i++)\r\n    {\r\n        \r\n        if(operators[operator]({data: dataList[i][0], spec_data: dataList[i][1], forms: formDict[dataList[i][3]]}, comparator, value))\r\n        {\r\n            finalList.push(dataList[i]);\r\n        }\r\n    }\r\n    return finalList;\r\n}\r\n\r\nmodule.exports = {evaluateArgument};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}